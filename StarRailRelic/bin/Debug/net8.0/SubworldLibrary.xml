<?xml version="1.0"?>
<doc>
	<assembly>
		<name>SubworldLibrary</name>
	</assembly>
	<members>
		<member name="M:SubworldLibrary.ICopyWorldData.CopyMainWorldData">
			<summary>
				在 <see cref="M:SubworldLibrary.Subworld.OnEnter"/> 之前，和在 <see cref="M:SubworldLibrary.Subworld.OnExit"/> 之后，调用所有实现了此接口的内容。
				<br/>在此处通过 <see cref="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)"/> 将数据从主世界复制到子世界。
				<code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.ICopyWorldData.ReadCopiedMainWorldData">
			<summary>
				在子世界生成之前，或从文件加载子世界之后，调用所有实现了此接口的内容。
				<br/>在此处通过 <see cref="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)"/> 从主世界读取复制到子世界的数据。
				<code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.Width">
			<summary>
				子世界的宽度。
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.Height">
			<summary>
				子世界的高度。
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.Tasks">
			<summary>
				子世界的生成任务。
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.ReturnDestination">
			<summary>
				玩家选择返回时将被送往的子世界的索引。见 <see cref="M:SubworldLibrary.SubworldSystem.GetIndex``1"/>。
				<br/>设置为 -1 以将玩家送回主世界。
				<br/>设置为 <see cref="F:System.Int32.MinValue"/> 以将玩家送到主菜单。
				<br/>默认值：-1
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.ShouldSave">
			<summary>
				子世界是否应该保存。
				<br/>默认值：false
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.NoPlayerSaving">
			<summary>
				当玩家离开子世界时，恢复对玩家的更改。
				<br/>默认值：false
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.NormalUpdates">
			<summary>
				完全禁用子世界中的原版世界更新。
				<br/>除非你在复制一个标准世界， 否则不要启用！
				<br/>默认值：false
			</summary>
		</member>
		<member name="P:SubworldLibrary.Subworld.ManualAudioUpdates">
			<summary>
				如果 <see cref="M:SubworldLibrary.Subworld.ChangeAudio"/> 返回 true，这将完全禁用原版音频更新。
				<br/>通常不需要。只有在你知道自己在做什么时才启用。
				<br/>默认值：false
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.OnEnter">
			<summary>
				进入子世界时调用。
				<br/>在调用此方法之前，返回按钮和地下世界的可见性会被重置。
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.OnExit">
			<summary>
				离开子世界时调用。
				<br/>在调用此方法之后，返回按钮和地下世界的可见性会被重置。
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.Update">
			<summary>
				在 <see cref="M:Terraria.ModLoader.ModSystem.PreUpdateWorld"/> 之后，以及在 <see cref="M:Terraria.ModLoader.ModSystem.PostUpdateWorld"/> 之前调用。
				<br/>这可以用于在子世界中创建事件。
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.CopyMainWorldData">
			<summary>
				在 <see cref="M:SubworldLibrary.Subworld.OnEnter"/> 之前，以及在 <see cref="M:SubworldLibrary.Subworld.OnExit"/> 之后，调用所有子世界。
				<br/>在此处通过 <see cref="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)"/> 将数据从主世界复制到子世界。
				<code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.CopySubworldData">
			<summary>
				在 <see cref="M:SubworldLibrary.Subworld.OnExit"/> 之前调用。
				<br/>在此处通过 <see cref="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)"/> 将数据从子世界复制到另一个世界。
				<code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.ReadCopiedMainWorldData">
			<summary>
				在所有子世界生成之前，或在加载子世界之后调用。
				<br/>在此处通过 <see cref="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)"/> 从主世界读取复制到子世界的数据。
				<code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.ReadCopiedSubworldData">
			<summary>
				离开子世界时调用，无论是在生成不同的世界之前，还是在加载不同的世界之后。
				<br/>在此处通过 <see cref="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)"/> 从子世界读取复制到另一个世界的数据。
				<code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.OnLoad">
			<summary>
				在子世界生成或从文件加载之后调用。
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.OnUnload">
			<summary>
				离开子世界时调用，在不同的世界生成或加载之前。
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.ReadFile(System.IO.BinaryReader)">
			<summary>
				需要了解原版世界文件加载的知识才能正确使用！只有当你知道自己在做什么时才能重写此方法。
			</summary>
			<returns>退出状态。返回的数字大于 0 表示世界文件读取失败。</returns>
		</member>
		<member name="M:SubworldLibrary.Subworld.PostReadFile">
			<summary>
				需要了解原版世界文件加载的知识才能正确使用！只有当你知道自己在做什么时才能重写此方法。
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.DrawSetup(Microsoft.Xna.Framework.GameTime)">
			<summary>
				校正缩放并清屏，然后调用 DrawMenu 并绘制光标。
				<code>
					PlayerInput.SetZoom_UI();
					Main.instance.GraphicsDevice.Clear(Color.Black);
					Main.spriteBatch.Begin(SpriteSortMode.Deferred, BlendState.AlphaBlend, SamplerState.LinearClamp, DepthStencilState.None, Main.Rasterizer, null, Main.UIScaleMatrix);
					DrawMenu(gameTime);
					Main.DrawCursor(Main.DrawThickCursor());
					Main.spriteBatch.End();
				</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.DrawMenu(Microsoft.Xna.Framework.GameTime)">
			<summary>
				由 DrawSetup 调用以绘制子世界的加载菜单。
				<br/>默认显示为黑色背景上的文本。
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.ChangeAudio">
			<summary>
				在选择音乐之前调用，包括在加载菜单中。
				<br/>返回 true 可禁用原版行为，允许修改诸如 <see cref="F:Terraria.Main.newMusic"/> 之类的变量。
				<br/>默认值：false
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.GetGravity(Terraria.Entity)">
			<summary>
				控制子世界中实体的重力。
				<br/>默认值：1
			</summary>
		</member>
		<member name="M:SubworldLibrary.Subworld.GetLight(Terraria.Tile,System.Int32,System.Int32,Terraria.Utilities.FastRandom@,Microsoft.Xna.Framework.Vector3@)">
			<summary>
				控制子世界中瓦片的光照。
				<br/>返回 true 以禁用原版行为。
				<br/>默认值：false
			</summary>
		</member>
		<member name="F:SubworldLibrary.SubworldSystem.noReturn">
			<summary>
				隐藏返回按钮。
				<br/>在调用 <see cref="M:SubworldLibrary.Subworld.OnEnter"/> 之前和在调用 <see cref="M:SubworldLibrary.Subworld.OnExit"/> 之后，它的值会被重置。
			</summary>
		</member>
		<member name="F:SubworldLibrary.SubworldSystem.hideUnderworld">
			<summary>
				隐藏地下世界背景。
				<br/>在调用 <see cref="M:SubworldLibrary.Subworld.OnEnter"/> 之前和在调用 <see cref="M:SubworldLibrary.Subworld.OnExit"/> 之后，它的值会被重置。
			</summary>
		</member>
		<member name="P:SubworldLibrary.SubworldSystem.Current">
			<summary>
				当前子世界。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.IsActive(System.String)">
			<summary>
				如果当前子世界的 ID 与指定 ID 匹配，则返回 true。
				<code>SubworldSystem.IsActive("MyMod/MySubworld")</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.IsActive``1">
			<summary>
				如果指定的子世界处于活动状态，则返回 true。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.AnyActive">
			<summary>
				如果不在主世界中，则返回 true。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.AnyActive(Terraria.ModLoader.Mod)">
			<summary>
				如果当前子世界来自指定的模组，则返回 true。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.AnyActive``1">
			<summary>
				如果当前子世界来自指定的模组，则返回 true。
			</summary>
		</member>
		<member name="P:SubworldLibrary.SubworldSystem.CurrentPath">
			<summary>
				当前子世界的文件路径。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.Enter(System.String)">
			<summary>
				尝试进入具有指定 ID 的子世界。
				<code>SubworldSystem.Enter("MyMod/MySubworld")</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.Enter``1">
			<summary>
				进入指定的子世界。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.Exit">
			<summary>
				退出当前子世界。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.MovePlayerToSubworld(System.String,System.Int32)">
			<summary>
				尝试将指定玩家发送到具有指定 ID 的子世界。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.MovePlayerToSubworld``1(System.Int32)">
			<summary>
				将指定玩家发送到指定子世界。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.StartSubserver(System.Int32)">
			<summary>
				为具有指定 ID 的子世界启动一个子服务器，如果尚未运行。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.StopSubserver(System.Int32)">
			<summary>
				停止具有指定 ID 的子世界的子服务器，如果正在运行。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.GetIndex(System.String)">
			<summary>
				尝试获取具有指定 ID 的子世界的索引。
				<br/>通常用于 <see cref="P:SubworldLibrary.Subworld.ReturnDestination"/>。
				<br/>如果找不到子世界，则返回 <see cref="F:System.Int32.MinValue"/>。
				<code>public override int ReturnDestination => SubworldSystem.GetIndex("MyMod/MySubworld");</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.GetIndex``1">
			<summary>
				获取指定子世界的索引。
				<br/>通常用于 <see cref="P:SubworldLibrary.Subworld.ReturnDestination"/>。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.SendToSubserver(System.Int32,Terraria.ModLoader.Mod,System.Byte[])">
			<summary>
				从指定模组直接向子服务器发送数据包。
				<br/>使用 <see cref="M:SubworldLibrary.SubworldSystem.GetIndex(System.String)"/> 获取子服务器的 ID。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.SendToAllSubservers(Terraria.ModLoader.Mod,System.Byte[])">
			<summary>
				将数据包从指定模组直接发送到所有子服务器。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.SendToAllSubserversFromMod(Terraria.ModLoader.Mod,System.Byte[])">
			<summary>
				将数据包从指定模组直接发送到该模组添加的所有子服务器。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.SendToMainServer(Terraria.ModLoader.Mod,System.Byte[])">
			<summary>
				将数据包从指定模组直接发送到主服务器。
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.CopyWorldData(System.String,System.Object)">
			<summary>
				只能在 <see cref="M:SubworldLibrary.Subworld.CopyMainWorldData"/> 或 <see cref="M:SubworldLibrary.Subworld.OnExit"/> 中调用！
				<br/>将要通过指定键传输的数据存储在两个世界之间，如果该键尚未使用。
				<br/>强烈建议将键命名为指向数据的变量，以避免重复复制。这可以通过 nameof() 自动完成。
				<code>SubworldSystem.CopyWorldData(nameof(DownedSystem.downedBoss), DownedSystem.downedBoss);</code>
			</summary>
		</member>
		<member name="M:SubworldLibrary.SubworldSystem.ReadCopiedWorldData``1(System.String)">
			<summary>
				只能在 <see cref="M:SubworldLibrary.Subworld.ReadCopiedMainWorldData"/> 或 <see cref="M:SubworldLibrary.Subworld.ReadCopiedSubworldData"/> 中调用！
				<br/>读取存储在指定键下的从另一个世界复制的数据。
				<code>DownedSystem.downedBoss = SubworldSystem.ReadCopiedWorldData&lt;bool&gt;(nameof(DownedSystem.downedBoss));</code>
			</summary>
		</member>
	</members>
</doc>
